{"version":3,"sources":["images/b5.jpg","images/bg4.jpg","home2.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","main","marginTop","spacing","marginBottom","paddingLeft","footer","padding","backgroundColor","Home","props","classes","imageUrl","window","innerWidth","bg","bgm","console","log","className","style","backgroundImage","minHeight","CssBaseline","Grid","container","item","xs","sm","component","direction","Typography","variant","gutterBottom","color","justify","Button","target","href","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,MAA0B,+BCA1B,MAA0B,gC,OCUnCA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,cAAe,UAEjBC,KAAM,CACJC,UAAWL,EAAMM,QAAQ,GACzBC,aAAcP,EAAMM,QAAQ,GAC5BE,YAAa,QAEfC,OAAQ,CACNC,QAASV,EAAMM,QAAQ,EAAG,GAC1BD,UAAW,OACXM,gBAAiB,aA6DNC,EAxDF,SAAAC,GAEX,IAAMC,EAAUhB,IACViB,EAAWC,OAAOC,YAAc,IAAMC,EAAKC,EAEjD,OADAC,QAAQC,IAAIR,EAAO,SAEjB,sBAAKS,UAAWR,EAAQb,KAAMsB,MAAO,CAACC,gBAAiB,OAAST,EAAW,IAAKU,UAAYT,OAAOC,YAAc,IAAM,OAAS,SAAhI,UACE,cAACS,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAU,OAAOV,UAAWR,EAAQV,KAAM6B,UAAU,SAAxF,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAU,KAAKI,cAAY,EAACb,MAAO,CAAEc,MAAO,SAArE,oCAMA,cAACV,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGR,MAAO,CAAEZ,gBAAiB,8BAahE,wBAAQW,UAAWR,EAAQL,OAA3B,SACE,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIG,UAAU,MAAMK,QAAQ,eAAehC,QAAS,EAA7E,UACE,eAACqB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAK,EAAxB,UACE,cAACG,EAAA,EAAD,CAAYC,QAAQ,QAApB,qCACA,cAACI,EAAA,EAAD,CAAQJ,QAAQ,YAAYE,MAAM,UAAUG,OAAO,SAASC,KAAK,sCAAjE,yBAIF,eAACd,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAK,EAAxB,UACE,cAACG,EAAA,EAAD,CAAYC,QAAQ,QAApB,+CACA,cAACI,EAAA,EAAD,CAAQG,UAAQ,EAACP,QAAQ,YAAYE,MAAM,YAAYG,OAAO,SAASC,KAAK,IAA5E,8BCtDGE,EARH,kBACV,8BAEE,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7b7385e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/b5.54ffee82.jpg\";","export default __webpack_public_path__ + \"static/media/bg4.61e4000c.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withGoogleSheets } from 'react-db-google-sheets';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button } from '@material-ui/core';\nimport bg from './images/b5.jpg'\nimport bgm from './images/bg4.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n    paddingLeft: '10px',\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor: 'white',\n  },\n\n}));\n\nconst Home = props => {\n  // const p = 'Display Name'\n  const classes = useStyles()\n  const imageUrl = window.innerWidth >= 650 ? bg : bgm; \n  console.log(props, \"eerer\");\n  return (\n    <div className={classes.root} style={{backgroundImage: \"url(\" + imageUrl + \")\", minHeight: (window.innerWidth >= 650 ? '85vh' : '100vh')}} >\n      <CssBaseline />\n      <Grid container item xs={12} sm={6} component=\"main\" className={classes.main} direction=\"column\">\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom style={{ color: 'white' }}>\n        Euro Prediction League\n          </Typography>\n          {/* <Typography variant=\"h6\" component=\"h1\" style={{ color: 'white'}}>\n                Score Board\n              </Typography> */}\n        <Grid container item xs={12} sm={6} style={{ backgroundColor: 'rgba(52, 52, 52, 0.7)' }}>\n          {/* {props.db.Score.map(data => (\n            <Grid container item xs={12} direction=\"row\">\n              <Typography variant=\"body1\" style={{ color: 'white', width: '50%' }}>\n                {data.display}\n              </Typography>\n              <Typography variant=\"body1\" style={{ color: 'white', width: '50%' }}>\n                {data.Score}\n              </Typography>\n            </Grid>\n          ))} */}\n        </Grid>\n      </Grid>\n      <footer className={classes.footer}>\n        <Grid container item xs={12} direction=\"row\" justify=\"space-around\" spacing={6}>\n          <Grid item xs={12} sm ={6}>\n            <Typography variant=\"body1\">Register to get started</Typography>\n            <Button variant=\"contained\" color=\"Primary\" target=\"_blank\" href=\"https://forms.gle/2GUgT3Ngvbo3PFi69\" >\n              Register\n            </Button>\n          </Grid>\n          <Grid item xs={12} sm ={6}>\n            <Typography variant=\"body1\">Click to play Euro fantasy League</Typography>\n            <Button disabled variant=\"contained\" color=\"Secondary\" target=\"_blank\" href=\"#\" >\n              Play\n            </Button>\n          </Grid>\n        </Grid>\n      </footer>\n    </div>\n  );\n}\n\n\nHome.propTypes = {\n  db: PropTypes.shape({\n    Score: PropTypes.arrayOf(PropTypes.object)\n  })\n};\n\n// export default withGoogleSheets('Score')(Home);\nexport default Home;\n\n","import React from 'react';\nimport GoogleSheetsProvider from 'react-db-google-sheets';\nimport Home2 from './home2'\n\nconst App = () => (\n  <div >\n  {/* <GoogleSheetsProvider > */}\n    <Home2 />\n  {/* </GoogleSheetsProvider> */}\n  </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}